1. Using pyodbc and Oracle Instant Client:
Prerequisites:

Install Oracle Instant Client.
Install pyodbc.


Python Code:


import pyodbc

def connect_to_oracle(username, password, hostname, port, service_name):
    conn_str = (
        f"DRIVER={{Oracle in instantclient_19_8}};"
        f"UID={username};"
        f"PWD={password};"
        f"SERVER={hostname}:{port}/{service_name}"
    )
    connection = pyodbc.connect(conn_str)
    return connection

def execute_query(connection, query):
    cursor = connection.cursor()
    cursor.execute(query)
    rows = cursor.fetchall()
    cursor.close()
    return rows

if __name__ == '__main__':
    username = 'YOUR_USERNAME'
    password = 'YOUR_PASSWORD'
    hostname = 'YOUR_HOSTNAME'
    port = 'YOUR_PORT'
    service_name = 'YOUR_SERVICE_NAME'
    
    connection = connect_to_oracle(username, password, hostname, port, service_name)
    
    try:
        query = 'SELECT * FROM YOUR_TABLE_NAME'
        rows = execute_query(connection, query)
        for row in rows:
            print(row)
    finally:
        connection.close()

----------------------------------------------------------------------

2. Using SQLAlchemy with cx_Oracle:
Prerequisites:

Install SQLAlchemy.
Install cx_Oracle.
Python Code:


from sqlalchemy import create_engine, text

def connect_to_oracle(username, password, hostname, port, service_name):
    dsn_str = f"oracle+cx_oracle://{username}:{password}@{hostname}:{port}/{service_name}"
    engine = create_engine(dsn_str)
    return engine

def execute_query(engine, query):
    with engine.connect() as connection:
        result = connection.execute(text(query))
        rows = result.fetchall()
    return rows

if __name__ == '__main__':
    username = 'YOUR_USERNAME'
    password = 'YOUR_PASSWORD'
    hostname = 'YOUR_HOSTNAME'
    port = 'YOUR_PORT'
    service_name = 'YOUR_SERVICE_NAME'
    
    engine = connect_to_oracle(username, password, hostname, port, service_name)
    
    try:
        query = 'SELECT * FROM YOUR_TABLE_NAME'
        rows = execute_query(engine, query)
        for row in rows:
            print(row)
    finally:
        engine.dispose()

----------------------------------------------------------------------

3. Using pyodbc and pyodbc-azure (for Oracle on Azure):
Prerequisites:

Install pyodbc.
Install pyodbc-azure.
Python Code:


import pyodbc

def connect_to_oracle(username, password, hostname, port, service_name):
    conn_str = (
        f"DRIVER={{Oracle in instantclient_19_8}};"
        f"UID={username};"
        f"PWD={password};"
        f"SERVER={hostname}:{port}/{service_name}"
    )
    connection = pyodbc.connect(conn_str)
    return connection

def execute_query(connection, query):
    cursor = connection.cursor()
    cursor.execute(query)
    rows = cursor.fetchall()
    cursor.close()
    return rows

if __name__ == '__main__':
    username = 'YOUR_USERNAME'
    password = 'YOUR_PASSWORD'
    hostname = 'YOUR_HOSTNAME'
    port = 'YOUR_PORT'
    service_name = 'YOUR_SERVICE_NAME'
    
    connection = connect_to_oracle(username, password, hostname, port, service_name)
    
    try:
        query = 'SELECT * FROM YOUR_TABLE_NAME'
        rows = execute_query(connection, query)
        for row in rows:
            print(row)
    finally:
        connection.close()
----------------------------------------------------------------------
