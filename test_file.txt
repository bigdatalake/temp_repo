import jaydebeapi
import os

def check_java_version():
    java_version = jaydebeapi._java_get_version()
    print(f"Java Version: {java_version}")

    major_version = int(java_version.split('.')[1])
    if major_version < 11:
        raise RuntimeError("Java version should be 11 or higher.")

def set_java_environment(jdk_path):
    os.environ['JAVA_HOME'] = jdk_path
    os.environ['PATH'] = f"{os.environ['JAVA_HOME']}\\bin;" + os.environ['PATH']

def connect_to_oracle(username, password, hostname, port, service_name, jar_path):
    conn_str = (
        f"jdbc:oracle:thin:@{hostname}:{port}/{service_name}"
    )

    connection = jaydebeapi.connect(
        "oracle.jdbc.driver.OracleDriver",
        conn_str,
        [username, password],
        jar_path
    )

    return connection

def execute_query(connection, query):
    cursor = connection.cursor()
    cursor.execute(query)
    rows = cursor.fetchall()
    cursor.close()
    return rows

if __name__ == '__main__':
    try:
        # Check Java version
        check_java_version()

        # Set Java environment
        jdk_path = 'C:\\path\\to\\jdk'  # Update with your JDK path
        set_java_environment(jdk_path)

        username = 'YOUR_USERNAME'
        password = 'YOUR_PASSWORD'
        hostname = 'YOUR_HOSTNAME'
        port = 'YOUR_PORT'
        service_name = 'YOUR_SERVICE_NAME'
        jar_path = '/path/to/ojdbc11.jar'  # Update with your ojdbc11.jar path

        connection = connect_to_oracle(username, password, hostname, port, service_name, jar_path)
        
        try:
            query = 'SELECT * FROM YOUR_TABLE_NAME'
            rows = execute_query(connection, query)
            for row in rows:
                print(row)
        finally:
            connection.close()

    except Exception as e:
        print(f"An error occurred: {e}")
